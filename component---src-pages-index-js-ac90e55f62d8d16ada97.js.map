{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/TopBar/TopBar.js","webpack://gatsby-starter-default/./src/components/CompanyDetails/CompanyDetails.js","webpack://gatsby-starter-default/./src/components/BankDetails/BankDetails.js","webpack://gatsby-starter-default/./src/components/ItemList/ItemsList.js","webpack://gatsby-starter-default/./src/pages/index.js"],"names":["className","src","Logo","alt","href","xmlns","fill","width","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","icon","faAngleDown","useState","bill","t_inv_no","t_issue_date","t_due","cmpny_name","gst","pan","state","address","inv_no","issue_date","due","value","setValue","handleChange","e","target","type","onChange","props","l_acc_name","l_bank_name","l_acc_no","l_ifsc","name","bank","acc_no","ifsc","l_subtot","cgst","sgst","igst","inv_tot","cgst_per","setCgst_per","sgst_per","setSgst_per","igst_per","setIgst_per","sgst_tot","parseFloat","total","toFixed","cgst_tot","igst_tot","min","max","handleCgst","handleSgst","handleIgst","currency","setTotal","item_desc","item_hsn_code","item_amount","rows","setRows","description","hsn_code","amount","handleHeaderChange","key","val","prevState","i","tot","newState","forEach","r","console","log","map","item","defaultValue","onClick","concat","ref","React","title","city","setCurrency","file","imgPreview","setImgPreview","error","setError","placeholder","htmlFor","id","event","selected","files","includes","reader","FileReader","onloadend","URL","createObjectURL","readAsDataURL","onBlur","handleClick"],"mappings":"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","file":"component---src-pages-index-js-ac90e55f62d8d16ada97.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDown} from '@fortawesome/free-solid-svg-icons';\r\nimport Logo from '../../images/logo.jpg'\r\n\r\nconst TopBar = () => {\r\n    return (\r\n        <div className=\"flex justify-between max-h-12 w-full p-2 bg-opacity-25 bg-transparent fixed z-50\">\r\n            <img src={Logo} alt=\"logo\" className=\"object-contain w-28\"></img>\r\n            {/* <FontAwesomeIcon icon={faUser} className=\"mr-16 mt-2\" /> */}\r\n            <div className=\"flex justify-between mr-4\">\r\n                <a className=\"px-6\" href=\"/\">Account</a>\r\n                <a className=\"px-6\" href=\"/\">History</a>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" width=\"40\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"pl-4\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                </svg>\r\n                <FontAwesomeIcon className=\"mt-2\" icon={faAngleDown} />\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default TopBar;","import React, { useState } from 'react';\r\n\r\n\r\n\r\nconst CompanyDetails = () => {\r\n  const [value, setValue] = useState({\r\n    bill: \"BILLED TO\",\r\n    t_inv_no: \"INV NUMBER\",\r\n    t_issue_date: \"DATE OF ISSUE\",\r\n    t_due: \"DUE DATE\",\r\n    cmpny_name: \"Company name\",\r\n    gst: \"GSTIN\",\r\n    pan: \"PAN\",\r\n    state: \"STATE\",\r\n    address: \"Address of the company\",\r\n    inv_no: \"INV - 00000\",\r\n    issue_date: \"28-Feb-21\",\r\n    due: \"7-Mar-21\"\r\n  });\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"text-gray-500 mb-4\" >\r\n        <div className=\"grid grid-cols-12 mb-2 lg:text-sm text-xs\">\r\n          <input type=\"text\" value={value.bill} className=\"col-span-5 mr-2 text-left font-semibold focus:outline-none hover:bg-yellow-100 focus:bg-yellow-100\" onChange={(e) => handleChange(e)} />\r\n          <input type=\"text\" value={value.t_inv_no} className=\"col-span-3 mr-2 font-semibold text-right focus:outline-none hover:bg-yellow-100 focus:bg-yellow-100\" onChange={(e) => handleChange(e)} />\r\n          <input type=\"text\" value={value.t_issue_date} className=\"col-span-2 font-semibold mr-2 text-right focus:outline-none hover:bg-yellow-100 focus:bg-yellow-100\" onChange={(e) => handleChange(e)} />\r\n          <input type=\"text\" value={value.t_due} className=\"col-span-2 mr-2 font-semibold text-right focus:outline-none hover:bg-yellow-100 focus:bg-yellow-100\" onChange={(e) => handleChange(e)} />\r\n        </div>\r\n        <div className=\"grid grid-cols-12\">\r\n          <div className=\"col-span-5 mr-2 w-full text-sm\">\r\n            <input type=\"text\" value={value.cmpny_name} className=\" w-full focus:outline-none hover:bg-yellow-100 focus:bg-yellow-100 \" onChange={(e) => handleChange(e)} />\r\n            <input type=\"text\" value={value.gst} className=\"w-full focus:outline-none hover:bg-yellow-100 focus:bg-yellow-100 \" onChange={(e) => handleChange(e)} />\r\n            <input type=\"text\" value={value.pan} className=\" w-full focus:outline-none hover:bg-yellow-100 focus:bg-yellow-100 \" onChange={(e) => handleChange(e)} />\r\n            <input type=\"text\" value={value.state} className=\"w-full focus:outline-none hover:bg-yellow-100 focus:bg-yellow-100\" onChange={(e) => handleChange(e)} />\r\n            <input type=\"text\" value={value.address} className=\" w-full focus:outline-none leading-none hover:bg-yellow-100 focus:bg-yellow-100 \" onChange={(e) => handleChange(e)} />\r\n          </div>\r\n          <input type=\"text\" value={value.inv_no} className=\"col-span-3 mr-2 text-sm text-right focus:outline-none max-h-12 hover:bg-yellow-100 focus:bg-yellow-100\" onChange={(e) => handleChange(e)} />\r\n          <input type=\"\" value={value.issue_date} className=\"col-span-2 mr-2 text-sm text-right focus:outline-none max-h-12 hover:bg-yellow-100 focus:bg-yellow-100\" onChange={(e) => handleChange(e)} />\r\n          <input type=\"\" value={value.due} className=\"col-span-2 mr-2 text-sm text-right focus:outline-none max-h-12  hover:bg-yellow-100 focus:bg-yellow-100\" onChange={(e) => handleChange(e)} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default CompanyDetails;","import React, { useState } from 'react';\r\n\r\n\r\n\r\nconst BankDetails = (props) => {\r\n    const [value, setValue] = useState({\r\n        l_acc_name: \"Account Name\",\r\n        l_bank_name: \"Bank Name\",\r\n        l_acc_no: \"Account Number\",\r\n        l_ifsc: \"IFSC Code\",\r\n        name: \"Name XXXX\",\r\n        bank: \"Bank YYYY\",\r\n        acc_no: \"5555 6666 7777 8888\",\r\n        ifsc: \"IFSC Code\",\r\n        l_subtot: \"SUBTOTAL\",\r\n        cgst: \"CGST\",\r\n        sgst: \"SGST\",\r\n        igst: \"IGST\",\r\n        inv_tot: \"INVOICE TOTAL\",\r\n    })\r\n    const [cgst_per, setCgst_per] = useState(0);\r\n    const [sgst_per, setSgst_per] = useState(0);\r\n    const [igst_per, setIgst_per] = useState(0);\r\n\r\n    const handleChange = (e) => {\r\n        setValue(e.target.value)\r\n    }\r\n    const handleCgst = (e) => {\r\n        setCgst_per(parseFloat(e.target.value))\r\n    }\r\n    const handleIgst = (e) => {\r\n        setIgst_per(parseFloat(e.target.value))\r\n    }\r\n    const handleSgst = (e) => {\r\n        setSgst_per(parseFloat(e.target.value))\r\n    }\r\n    const sgst_tot = parseFloat(props.total * (sgst_per / 100)).toFixed(2);\r\n    const cgst_tot = parseFloat(props.total * (cgst_per / 100)).toFixed(2);\r\n    const igst_tot = parseFloat(props.total * (igst_per / 100)).toFixed(2);\r\n    const grant_tot = parseFloat(props.total + sgst_tot + cgst_tot + igst_tot).toFixed(2);\r\n    return (\r\n        <div className=\"text-gray-500 text-xs lg:text-sm\">\r\n            <div className=\"\">\r\n                <div className=\"grid grid-cols-12 mb-8 col-end-8\">\r\n                    <div className=\"col-span-6\"></div>\r\n                    <div className=\"col-span-3\">\r\n                        <input type=\"text\" value={value.l_subtot} className=\"focus:outline-none hover:bg-yellow-100 focus:bg-yellow-100 text-xs  font-semibold lg:text-sm\" onChange={(e) => handleChange(e)} />\r\n                        {\r\n                            !igst_per >= 1 ? (\r\n                                <>\r\n                                    <input type=\"text\" value={value.cgst} className=\"focus:outline-none hover:bg-yellow-100 focus:bg-yellow-100 font-semibold  w-1/2\" onChange={(e) => handleChange(e)} />\r\n                                    <input type=\"number\" value={cgst_per} min=\"0\" max=\"100\" className=\"focus:outline-none hover:bg-yellow-100 focus:bg-yellow-100 font-semibold  w-1/4 text-center\" onChange={(e) => handleCgst(e)} /><span>%</span>\r\n                                    <input type=\"text\" value={value.sgst}  className=\"focus:outline-none hover:bg-yellow-100 focus:bg-yellow-100 font-semibold  w-1/2\" onChange={(e) => handleChange(e)} />\r\n                                    <input type=\"number\" value={sgst_per} min=\"0\" className=\"focus:outline-none hover:bg-yellow-100 focus:bg-yellow-100 font-semibold w-1/4 text-center\" onChange={(e) => handleSgst(e)} /><span>%</span>\r\n                                </>\r\n                            ) : null\r\n                        }\r\n                        {\r\n                            !cgst_per >= 1 && !sgst_per >= 1 ? (\r\n                                <>\r\n                                    <input type=\"text\" value={value.igst} className=\"focus:outline-none hover:bg-yellow-100 focus:bg-yellow-100 font-semibold w-1/2\" onChange={(e) => handleChange(e)} />\r\n                                    <input type=\"number\" value={igst_per} min=\"0\" className=\"focus:outline-none hover:bg-yellow-100 focus:bg-yellow-100 font-semibold w-1/4 text-center\" onChange={(e) => handleIgst(e)} /><span>%</span>\r\n                                </>\r\n                            ) : null\r\n                        }\r\n                        <input type=\"text\" value={value.inv_tot} className=\"focus:outline-none hover:bg-yellow-100 focus:bg-yellow-100 font-semibold\" onChange={(e) => handleChange(e)} />\r\n                    </div>\r\n                    <div className=\"col-span-3 text-right\">\r\n                        <p className=\"\">{props.currency} {parseFloat(props.total).toFixed(2)}</p>\r\n                        {\r\n                            !igst_per >= 1 ? (\r\n                                <>\r\n                                    <p>{props.currency} {cgst_tot}</p>\r\n                                    <p className=\"\">{props.currency} {sgst_tot} </p>\r\n                                </>\r\n                            ) : null\r\n                        }\r\n                        {\r\n                            !cgst_per >= 1 && !sgst_per >= 1 ? (\r\n                                <>\r\n                                    <p className=\"\">{props.currency} {igst_tot}</p>\r\n                                </>\r\n                            ) : null\r\n                        }\r\n                        <p>{props.currency} {parseFloat(parseFloat(cgst_tot)+parseFloat(props.total)+parseFloat(sgst_tot)+parseFloat(igst_tot)).toFixed(2)}</p>\r\n                    </div>\r\n                </div>\r\n                <input type=\"text\" className=\"focus:outline-none hover:bg-yellow-100 focus:bg-yellow-100 text-md font-semibold mb-2\" value=\"Bank Details\" onChange={(e) => handleChange(e)} />\r\n                <div className=\"grid grid-cols-12 text-sm mb-10\">\r\n                    <div className=\"col-span-3 w-full \">\r\n                        <input type=\"text\" value={value.l_acc_name} className=\"focus:outline-none hover:bg-yellow-100 focus:bg-yellow-100\" onChange={(e) => handleChange(e)} />\r\n                        <input type=\"text\" value={value.l_bank_name} className=\"focus:outline-none hover:bg-yellow-100 focus:bg-yellow-100\" onChange={(e) => handleChange(e)} />\r\n                        <input type=\"text\" value={value.l_acc_no} className=\"focus:outline-none hover:bg-yellow-100 focus:bg-yellow-100\" onChange={(e) => handleChange(e)} />\r\n                        <input type=\"text\" value={value.l_ifsc} className=\"focus:outline-none hover:bg-yellow-100 focus:bg-yellow-100\" onChange={(e) => handleChange(e)} />\r\n                    </div>\r\n                    <div className=\"col-span-3  w-full\">\r\n                        <input type=\"text\" value={value.name} className=\" w-full focus:outline-none hover:bg-yellow-100 focus:bg-yellow-100\" onChange={(e) => handleChange(e)} />\r\n                        <input type=\"text\" value={value.bank} className=\"w-full focus:outline-none hover:bg-yellow-100 focus:bg-yellow-100\" onChange={(e) => handleChange(e)} />\r\n                        <input type=\"text\" value={value.acc_no} className=\"w-full focus:outline-none hover:bg-yellow-100 focus:bg-yellow-100\" onChange={(e) => handleChange(e)} />\r\n                        <input type=\"text\" value={value.ifsc} className=\"w-full focus:outline-none hover:bg-yellow-100 focus:bg-yellow-100\" onChange={(e) => handleChange(e)} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default BankDetails;","import React, { useEffect, useState } from 'react';\r\nimport BankDetails from '../BankDetails/BankDetails';\r\n\r\n\r\nconst ItemsList = (props) => {\r\n  const [total, setTotal] = useState(100);\r\n  const [rows, setRows] = useState([\r\n    {\r\n      item_desc: \"Monthly charges towards development of digital suite of products\",\r\n      item_hsn_code: \"998314\",\r\n      item_amount: total\r\n    }\r\n  ]);\r\n  const [value, setValue] = useState({\r\n    description: \"DESCRIPTION\",\r\n    hsn_code: \"HSN CODE\",\r\n    amount: \"AMOUNT\",\r\n  });\r\n\r\n  const totalCalc = () => {\r\n    let tot = 0;\r\n    rows.forEach(r => {\r\n      console.log(r)\r\n      tot += parseFloat(r.item_amount)\r\n    })\r\n    console.log(tot)\r\n    setTotal(tot)\r\n  }\r\n\r\n  const handleHeaderChange = (key, val) => {\r\n    setValue(prevState => ({\r\n      ...prevState,\r\n      [key]: val\r\n    }))\r\n  }\r\n  const handleChange = (i, key, val) => {\r\n    setRows(prevState => {\r\n      let newState = prevState;\r\n      newState[i][key] = val;\r\n      totalCalc();\r\n      return newState;\r\n    })\r\n    // setValue(e.target.value)\r\n    // if(key === 'item_amount') {\r\n    //   setTotal(prevTotal => parseFloat(prevTotal) + parseFloat(val))\r\n    // }\r\n  }\r\n\r\n  const addNewRow = () => {\r\n    setRows(prevState => prevState.concat({\r\n      item_desc: \"New row item\",\r\n      item_hsn_code: \"998314\",\r\n      item_amount: 0\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-4\">\r\n        <div className=\"text-gray-500 mb-6\" >\r\n          <div className=\"grid grid-cols-12 mb-2\">\r\n            <input type=\"text\" value={value.description} className=\"col-span-6 mr-2 focus:outline-none font-semibold text-sm  hover:bg-yellow-100 focus:bg-yellow-100\" onChange={(e) => handleHeaderChange('description', e?.target?.value)} />\r\n            <input type=\"text\" value={value.hsn_code} className=\"col-span-3 mr-2 text-right focus:outline-none hover:bg-yellow-100 focus:bg-yellow-100 font-semibold text-sm\" onChange={(e) => handleHeaderChange('hsn_code', e?.target?.value)} />\r\n            <input type=\"text\" value={value.amount} className=\"col-span-3 text-right focus:outline-none font-semibold text-sm hover:bg-yellow-100 focus:bg-yellow-100\" onChange={(e) => handleHeaderChange('amount', e?.target?.value)} />\r\n          </div>\r\n          {\r\n\r\n            rows.map((item, i) => {\r\n              return (\r\n                <div key={`row-${i}`} className=\"grid grid-cols-12 mb-2\">\r\n                  <textarea type=\"text\" defaultValue={item.item_desc} className=\"mr-2 col-span-6 text-sm  focus:outline-none  hover:bg-yellow-100 focus:bg-yellow-100\" onChange={(e) => handleChange(i, 'item_desc', e?.target?.value)} />\r\n                  <input type=\"text\" defaultValue={item.item_hsn_code} className=\"focus:outline-none mr-2 h-5 hover:bg-yellow-100  focus:bg-yellow-100 col-span-3 text-sm text-right\" onChange={(e) => handleChange(i, 'item_hsn_code', e?.target?.value)} />\r\n                  <input type=\"\" min=\"1\" defaultValue={item.item_amount} className=\"focus:outline-none h-5  hover:bg-yellow-100 focus:bg-yellow-100 col-span-3 text-sm text-right\" onChange={(e) => handleChange(i, 'item_amount', e?.target?.value)} />\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n\r\n        </div>\r\n        <span className=\"cursor-pointer font-semibold text-sm text-blue-800\" onClick={addNewRow}>+ Add Item to the list</span>\r\n      </div>\r\n      <BankDetails total={parseFloat(total)} currency={props.currency} />\r\n    </>\r\n  )\r\n}\r\nexport default ItemsList;","import React, { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileAlt } from '@fortawesome/free-solid-svg-icons';\nimport TopBar from '../components/TopBar/TopBar';\nimport Logo from '../images/logo.jpg';\nimport CompanyDetails from '../components/CompanyDetails/CompanyDetails';\nimport ItemsList from '../components/ItemList/ItemsList';\n// import Pdf from \"react-to-pdf\";\n\nconst ref = React.createRef();\nconst HomePage = () => {\n  const [value, setValue] = useState({\n    title: \"Invoice\",\n    name: \"Pentafox Texhnologies Private Limited\",\n    address: \"59, Journalist Colony, Thiruvanmiyur\",\n    city: \"Chennai - 600041\",\n    gst: \"GSTIN - 33AAICP5142K1ZC\",\n    state: \"STATE - 33 - Tamil Nadu\",\n    pan: \"PAN - AAICP5142K\"\n  })\n  const [currency, setCurrency] = useState(\"₹\")\n  const [imgPreview, setImgPreview] = useState({ file: null });\n  const [error, setError] = useState(false);\n  const handleChange = (e) => {\n    setValue(e.target.value)\n  }\n  const handleClick = (e) => {\n    setCurrency(e.target.value)\n  }\n  const onChange = (event) => {\n    const selected = event.target.files[0];\n    const ALLOWED_TYPES = [\"image/png\", \"image/jpeg\", \"image/jpg\"];\n    if (selected && ALLOWED_TYPES.includes(selected.type)) {\n      let reader = new FileReader();\n      reader.onloadend = () => {\n        setImgPreview({ file: URL.createObjectURL(selected) });\n      };\n      reader.readAsDataURL(selected);\n    } else {\n      setError(true);\n    }\n\n  }\n  return (\n    <>\n      <div className=\"bg-gray-200 min-h-screen min-w-screen\" >\n        <div className=\"\">\n          <TopBar />\n        </div>\n        <div className=\"lg:flex lg:justify-center lg:w-8/12   lg:mx-auto\">\n          <div className=\"lg:block hidden \" >\n            {/* <Pdf targetRef={ref} filename=\"invoice.pdf\" size=\"A4\">\n              {({ toPdf }) => <div className=\"mt-20 w-8 mr-12\"><FontAwesomeIcon onClick={toPdf} className=\" fixed cursor-pointer\" icon={faFileAlt} size=\"3x\" color=\"gray\" /></div>}\n            </Pdf> */}\n          </div>\n          <div className=\" bg-white lg:mt-20 lg:p-12 p-4 min-h-screen\" ref={ref}>\n            <div className=\"text-center mb-4 lg:mt-0 mt-8\" >\n              <input className=\"focus:outline-none mx-auto text-xl font-semibold text-center text-gray-700  hover:bg-yellow-100 focus:bg-yellow-100\" value={value.title} type=\"text\" placeholder={value.title} onChange={(e) => handleChange(e)} />\n            </div>\n            <div className=\"flex mb-8\">\n              <div className=\"\">\n                <input className=\"font-semibold w-full focus:outline-none text-gray-600 lg:text-xl text-sm hover:bg-yellow-100 focus:bg-yellow-100\" value={value.name} type=\"text\" onChange={(e) => handleChange(e)} />\n                <input className=\"font-medium w-full text-xs focus:outline-none hover:bg-yellow-100 focus:bg-yellow-100\" type=\"address\" value={value.address} placeholder=\"address line 1\" onChange={(e) => handleChange(e)} />\n                <input className=\"font-medium w-full text-xs focus:outline-none hover:bg-yellow-100 focus:bg-yellow-100\" type=\"address\" value={value.city} placeholder=\"address line 2\" onChange={(e) => handleChange(e)} />\n                <input className=\"font-medium w-full text-xs focus:outline-none leading-none hover:bg-yellow-100 focus:bg-yellow-100\" type=\"text\" value={value.gst} onChange={(e) => handleChange(e)} />\n                <input className=\"font-medium text-xs w-full focus:outline-none leading-none hover:bg-yellow-100 focus:bg-yellow-100\" type=\"text\" value={value.state} onChange={(e) => handleChange(e)} />\n                <input className=\"font-medium text-xs w-full focus:outline-none leading-none hover:bg-yellow-100 focus:bg-yellow-100\" type=\"text\" value={value.pan} onChange={(e) => handleChange(e)} />\n              </div>\n              <div>\n                <div className=\"lg:w-24 mt-8 w-20 m-auto cursor-pointer\">\n                  {error && <p className=\"text-red-500 text-xs\">File not supported</p>}\n                  <div>\n                    {\n                      <>\n                        <label htmlFor=\"fileUpload\" className=\"\">\n                          {imgPreview.file ? <img src={imgPreview.file} alt=\"could not be stored\" /> : <img src={Logo} alt=\"alter\" className=\"\" />} </label>\n                        <input type=\"file\" id=\"fileUpload\" onChange={onChange} className=\"hidden\" />\n                      </>\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n            <CompanyDetails />\n            <ItemsList currency={currency} />\n          </div>\n          <div className=\"w-8 ml-6 mt-20 lg:block hidden \">\n            <select className=\"fixed p-1 text-2xl focus:outline-none w-12\" onBlur={(e) => handleClick(e)}>\n              <option>₹</option>\n              <option>$</option>\n              <option>£</option>\n              <option>€</option>\n              <option>¥</option>\n            </select>\n          </div>\n        </div>\n\n      </div>\n\n    </>\n  );\n}\n\nexport default HomePage;\n"],"sourceRoot":""}